/* tslint:disable */
/* eslint-disable */
/**
 * BMI-LAB Web API
 * BMI-LAB을 관리하기 위한 웹 서비스
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserSummary
 */
export interface UserSummary {
    /**
     * 사용자 ID
     * @type {number}
     * @memberof UserSummary
     */
    userId?: number;
    /**
     * 이메일 주소
     * @type {string}
     * @memberof UserSummary
     */
    email?: string;
    /**
     * 이름
     * @type {string}
     * @memberof UserSummary
     */
    name?: string;
    /**
     * 기관
     * @type {string}
     * @memberof UserSummary
     */
    organization?: string;
    /**
     * 부서
     * @type {string}
     * @memberof UserSummary
     */
    department?: string;
    /**
     * 직책 (있으면)
     * @type {string}
     * @memberof UserSummary
     */
    position?: UserSummaryPositionEnum;
    /**
     * 프로필 이미지 URL
     * @type {string}
     * @memberof UserSummary
     */
    profileImageUrl?: string;
}


/**
 * @export
 */
export const UserSummaryPositionEnum = {
    Professor: 'PROFESSOR',
    CoPrincipalInvestigator: 'CO_PRINCIPAL_INVESTIGATOR',
    PostdoctoralResearcher: 'POSTDOCTORAL_RESEARCHER',
    PhdStudent: 'PHD_STUDENT',
    MastersStudent: 'MASTERS_STUDENT',
    TranslationalMedicineTrainee: 'TRANSLATIONAL_MEDICINE_TRAINEE',
    ResearcherOrIntern: 'RESEARCHER_OR_INTERN',
    AdministrativeStaff: 'ADMINISTRATIVE_STAFF'
} as const;
export type UserSummaryPositionEnum = typeof UserSummaryPositionEnum[keyof typeof UserSummaryPositionEnum];


/**
 * Check if a given object implements the UserSummary interface.
 */
export function instanceOfUserSummary(value: object): value is UserSummary {
    return true;
}

export function UserSummaryFromJSON(json: any): UserSummary {
    return UserSummaryFromJSONTyped(json, false);
}

export function UserSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['userId'] == null ? undefined : json['userId'],
        'email': json['email'] == null ? undefined : json['email'],
        'name': json['name'] == null ? undefined : json['name'],
        'organization': json['organization'] == null ? undefined : json['organization'],
        'department': json['department'] == null ? undefined : json['department'],
        'position': json['position'] == null ? undefined : json['position'],
        'profileImageUrl': json['profileImageUrl'] == null ? undefined : json['profileImageUrl'],
    };
}

export function UserSummaryToJSON(json: any): UserSummary {
    return UserSummaryToJSONTyped(json, false);
}

export function UserSummaryToJSONTyped(value?: UserSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'userId': value['userId'],
        'email': value['email'],
        'name': value['name'],
        'organization': value['organization'],
        'department': value['department'],
        'position': value['position'],
        'profileImageUrl': value['profileImageUrl'],
    };
}

