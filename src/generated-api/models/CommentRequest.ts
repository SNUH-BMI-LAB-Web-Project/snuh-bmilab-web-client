/* tslint:disable */
/* eslint-disable */
/**
 * BMI-LAB Web API
 * BMI-LAB을 관리하기 위한 웹 서비스
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CommentRequest
 */
export interface CommentRequest {
    /**
     * 댓글 내용
     * @type {string}
     * @memberof CommentRequest
     */
    message: string;
    /**
     * 댓글 도메인 타입
     * @type {string}
     * @memberof CommentRequest
     */
    domainType: CommentRequestDomainTypeEnum;
    /**
     * 댓글 엔티티 ID
     * @type {number}
     * @memberof CommentRequest
     */
    entityId: number;
}


/**
 * @export
 */
export const CommentRequestDomainTypeEnum = {
    Board: 'BOARD'
} as const;
export type CommentRequestDomainTypeEnum = typeof CommentRequestDomainTypeEnum[keyof typeof CommentRequestDomainTypeEnum];


/**
 * Check if a given object implements the CommentRequest interface.
 */
export function instanceOfCommentRequest(value: object): value is CommentRequest {
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('domainType' in value) || value['domainType'] === undefined) return false;
    if (!('entityId' in value) || value['entityId'] === undefined) return false;
    return true;
}

export function CommentRequestFromJSON(json: any): CommentRequest {
    return CommentRequestFromJSONTyped(json, false);
}

export function CommentRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommentRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['message'],
        'domainType': json['domainType'],
        'entityId': json['entityId'],
    };
}

export function CommentRequestToJSON(json: any): CommentRequest {
    return CommentRequestToJSONTyped(json, false);
}

export function CommentRequestToJSONTyped(value?: CommentRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'message': value['message'],
        'domainType': value['domainType'],
        'entityId': value['entityId'],
    };
}

