/* tslint:disable */
/* eslint-disable */
/**
 * BMI-LAB Web API
 * BMI-LAB을 관리하기 위한 웹 서비스
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProjectCategorySummary } from './ProjectCategorySummary';
import {
    ProjectCategorySummaryFromJSON,
    ProjectCategorySummaryFromJSONTyped,
    ProjectCategorySummaryToJSON,
    ProjectCategorySummaryToJSONTyped,
} from './ProjectCategorySummary';
import type { UserEducationSummary } from './UserEducationSummary';
import {
    UserEducationSummaryFromJSON,
    UserEducationSummaryFromJSONTyped,
    UserEducationSummaryToJSON,
    UserEducationSummaryToJSONTyped,
} from './UserEducationSummary';
import type { UserSubAffiliationSummary } from './UserSubAffiliationSummary';
import {
    UserSubAffiliationSummaryFromJSON,
    UserSubAffiliationSummaryFromJSONTyped,
    UserSubAffiliationSummaryToJSON,
    UserSubAffiliationSummaryToJSONTyped,
} from './UserSubAffiliationSummary';

/**
 * 
 * @export
 * @interface UserDetail
 */
export interface UserDetail {
    /**
     * 사용자 ID
     * @type {number}
     * @memberof UserDetail
     */
    userId?: number;
    /**
     * 이메일 주소
     * @type {string}
     * @memberof UserDetail
     */
    email?: string;
    /**
     * 이름
     * @type {string}
     * @memberof UserDetail
     */
    name?: string;
    /**
     * 기관
     * @type {string}
     * @memberof UserDetail
     */
    organization?: string;
    /**
     * 부서
     * @type {string}
     * @memberof UserDetail
     */
    department?: string;
    /**
     * 구분 (있으면)
     * @type {string}
     * @memberof UserDetail
     */
    position?: UserDetailPositionEnum;
    /**
     * 서브 소속 목록
     * @type {Array<UserSubAffiliationSummary>}
     * @memberof UserDetail
     */
    subAffiliations?: Array<UserSubAffiliationSummary>;
    /**
     * 사용자 역할
     * @type {string}
     * @memberof UserDetail
     */
    role?: UserDetailRoleEnum;
    /**
     * 프로필 이미지 URL
     * @type {string}
     * @memberof UserDetail
     */
    profileImageUrl?: string;
    /**
     * 총 연차 수
     * @type {number}
     * @memberof UserDetail
     */
    annualLeaveCount?: number;
    /**
     * 사용한 연차 수
     * @type {number}
     * @memberof UserDetail
     */
    usedLeaveCount?: number;
    /**
     * 연구 분야 목록
     * @type {Array<ProjectCategorySummary>}
     * @memberof UserDetail
     */
    categories?: Array<ProjectCategorySummary>;
    /**
     * 좌석 번호
     * @type {string}
     * @memberof UserDetail
     */
    seatNumber?: string;
    /**
     * 전화번호
     * @type {string}
     * @memberof UserDetail
     */
    phoneNumber?: string;
    /**
     * 학력
     * @type {Array<UserEducationSummary>}
     * @memberof UserDetail
     */
    educations?: Array<UserEducationSummary>;
    /**
     * 비고 또는 한 줄 소개
     * @type {string}
     * @memberof UserDetail
     */
    comment?: string;
    /**
     * 입사일
     * @type {Date}
     * @memberof UserDetail
     */
    joinedAt?: Date;
}


/**
 * @export
 */
export const UserDetailPositionEnum = {
    Professor: 'PROFESSOR',
    CoPrincipalInvestigator: 'CO_PRINCIPAL_INVESTIGATOR',
    PostdoctoralResearcher: 'POSTDOCTORAL_RESEARCHER',
    PhdStudent: 'PHD_STUDENT',
    MastersStudent: 'MASTERS_STUDENT',
    TranslationalMedicineTrainee: 'TRANSLATIONAL_MEDICINE_TRAINEE',
    ResearcherOrIntern: 'RESEARCHER_OR_INTERN',
    AdministrativeStaff: 'ADMINISTRATIVE_STAFF'
} as const;
export type UserDetailPositionEnum = typeof UserDetailPositionEnum[keyof typeof UserDetailPositionEnum];

/**
 * @export
 */
export const UserDetailRoleEnum = {
    User: 'USER',
    Admin: 'ADMIN'
} as const;
export type UserDetailRoleEnum = typeof UserDetailRoleEnum[keyof typeof UserDetailRoleEnum];


/**
 * Check if a given object implements the UserDetail interface.
 */
export function instanceOfUserDetail(value: object): value is UserDetail {
    return true;
}

export function UserDetailFromJSON(json: any): UserDetail {
    return UserDetailFromJSONTyped(json, false);
}

export function UserDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDetail {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['userId'] == null ? undefined : json['userId'],
        'email': json['email'] == null ? undefined : json['email'],
        'name': json['name'] == null ? undefined : json['name'],
        'organization': json['organization'] == null ? undefined : json['organization'],
        'department': json['department'] == null ? undefined : json['department'],
        'position': json['position'] == null ? undefined : json['position'],
        'subAffiliations': json['subAffiliations'] == null ? undefined : ((json['subAffiliations'] as Array<any>).map(UserSubAffiliationSummaryFromJSON)),
        'role': json['role'] == null ? undefined : json['role'],
        'profileImageUrl': json['profileImageUrl'] == null ? undefined : json['profileImageUrl'],
        'annualLeaveCount': json['annualLeaveCount'] == null ? undefined : json['annualLeaveCount'],
        'usedLeaveCount': json['usedLeaveCount'] == null ? undefined : json['usedLeaveCount'],
        'categories': json['categories'] == null ? undefined : ((json['categories'] as Array<any>).map(ProjectCategorySummaryFromJSON)),
        'seatNumber': json['seatNumber'] == null ? undefined : json['seatNumber'],
        'phoneNumber': json['phoneNumber'] == null ? undefined : json['phoneNumber'],
        'educations': json['educations'] == null ? undefined : ((json['educations'] as Array<any>).map(UserEducationSummaryFromJSON)),
        'comment': json['comment'] == null ? undefined : json['comment'],
        'joinedAt': json['joinedAt'] == null ? undefined : (new Date(json['joinedAt'])),
    };
}

export function UserDetailToJSON(json: any): UserDetail {
    return UserDetailToJSONTyped(json, false);
}

export function UserDetailToJSONTyped(value?: UserDetail | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'userId': value['userId'],
        'email': value['email'],
        'name': value['name'],
        'organization': value['organization'],
        'department': value['department'],
        'position': value['position'],
        'subAffiliations': value['subAffiliations'] == null ? undefined : ((value['subAffiliations'] as Array<any>).map(UserSubAffiliationSummaryToJSON)),
        'role': value['role'],
        'profileImageUrl': value['profileImageUrl'],
        'annualLeaveCount': value['annualLeaveCount'],
        'usedLeaveCount': value['usedLeaveCount'],
        'categories': value['categories'] == null ? undefined : ((value['categories'] as Array<any>).map(ProjectCategorySummaryToJSON)),
        'seatNumber': value['seatNumber'],
        'phoneNumber': value['phoneNumber'],
        'educations': value['educations'] == null ? undefined : ((value['educations'] as Array<any>).map(UserEducationSummaryToJSON)),
        'comment': value['comment'],
        'joinedAt': value['joinedAt'] == null ? undefined : ((value['joinedAt']).toISOString().substring(0,10)),
    };
}

