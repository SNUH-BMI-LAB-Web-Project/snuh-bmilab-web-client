/* tslint:disable */
/* eslint-disable */
/**
 * BMI-LAB Web API
 * BMI-LAB을 관리하기 위한 웹 서비스
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserSummary } from './UserSummary';
import {
    UserSummaryFromJSON,
    UserSummaryFromJSONTyped,
    UserSummaryToJSON,
    UserSummaryToJSONTyped,
} from './UserSummary';
import type { ProjectCategorySummary } from './ProjectCategorySummary';
import {
    ProjectCategorySummaryFromJSON,
    ProjectCategorySummaryFromJSONTyped,
    ProjectCategorySummaryToJSON,
    ProjectCategorySummaryToJSONTyped,
} from './ProjectCategorySummary';
import type { ExternalProfessorSummary } from './ExternalProfessorSummary';
import {
    ExternalProfessorSummaryFromJSON,
    ExternalProfessorSummaryFromJSONTyped,
    ExternalProfessorSummaryToJSON,
    ExternalProfessorSummaryToJSONTyped,
} from './ExternalProfessorSummary';

/**
 * 
 * @export
 * @interface ProjectSummary
 */
export interface ProjectSummary {
    /**
     * 연구 ID
     * @type {number}
     * @memberof ProjectSummary
     */
    projectId?: number;
    /**
     * 연구 제목
     * @type {string}
     * @memberof ProjectSummary
     */
    title?: string;
    /**
     * 연구 분야
     * @type {ProjectCategorySummary}
     * @memberof ProjectSummary
     */
    category?: ProjectCategorySummary;
    /**
     * 연구 시작일
     * @type {Date}
     * @memberof ProjectSummary
     */
    startDate?: Date;
    /**
     * 연구 종료일
     * @type {Date}
     * @memberof ProjectSummary
     */
    endDate?: Date;
    /**
     * PI 목록
     * @type {Array<ExternalProfessorSummary>}
     * @memberof ProjectSummary
     */
    piList?: Array<ExternalProfessorSummary>;
    /**
     * 실무 교수 목록
     * @type {Array<ExternalProfessorSummary>}
     * @memberof ProjectSummary
     */
    practicalProfessors?: Array<ExternalProfessorSummary>;
    /**
     * 연구 책임자 목록
     * @type {Array<UserSummary>}
     * @memberof ProjectSummary
     */
    leaders?: Array<UserSummary>;
    /**
     * 연구 참여자 수
     * @type {number}
     * @memberof ProjectSummary
     */
    participantCount?: number;
    /**
     * 연구 상태
     * @type {string}
     * @memberof ProjectSummary
     */
    status?: ProjectSummaryStatusEnum;
    /**
     * 연구 비공개 여부
     * @type {boolean}
     * @memberof ProjectSummary
     */
    isPrivate?: boolean;
    /**
     * 연구 접근 가능 여부
     * @type {boolean}
     * @memberof ProjectSummary
     */
    isAccessible?: boolean;
    /**
     * 연구 고정 여부
     * @type {boolean}
     * @memberof ProjectSummary
     */
    isPinned?: boolean;
}


/**
 * @export
 */
export const ProjectSummaryStatusEnum = {
    Pending: 'PENDING',
    InProgress: 'IN_PROGRESS',
    Completed: 'COMPLETED',
    Waiting: 'WAITING'
} as const;
export type ProjectSummaryStatusEnum = typeof ProjectSummaryStatusEnum[keyof typeof ProjectSummaryStatusEnum];


/**
 * Check if a given object implements the ProjectSummary interface.
 */
export function instanceOfProjectSummary(value: object): value is ProjectSummary {
    return true;
}

export function ProjectSummaryFromJSON(json: any): ProjectSummary {
    return ProjectSummaryFromJSONTyped(json, false);
}

export function ProjectSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'projectId': json['projectId'] == null ? undefined : json['projectId'],
        'title': json['title'] == null ? undefined : json['title'],
        'category': json['category'] == null ? undefined : ProjectCategorySummaryFromJSON(json['category']),
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
        'endDate': json['endDate'] == null ? undefined : (new Date(json['endDate'])),
        'piList': json['piList'] == null ? undefined : ((json['piList'] as Array<any>).map(ExternalProfessorSummaryFromJSON)),
        'practicalProfessors': json['practicalProfessors'] == null ? undefined : ((json['practicalProfessors'] as Array<any>).map(ExternalProfessorSummaryFromJSON)),
        'leaders': json['leaders'] == null ? undefined : ((json['leaders'] as Array<any>).map(UserSummaryFromJSON)),
        'participantCount': json['participantCount'] == null ? undefined : json['participantCount'],
        'status': json['status'] == null ? undefined : json['status'],
        'isPrivate': json['isPrivate'] == null ? undefined : json['isPrivate'],
        'isAccessible': json['isAccessible'] == null ? undefined : json['isAccessible'],
        'isPinned': json['isPinned'] == null ? undefined : json['isPinned'],
    };
}

export function ProjectSummaryToJSON(json: any): ProjectSummary {
    return ProjectSummaryToJSONTyped(json, false);
}

export function ProjectSummaryToJSONTyped(value?: ProjectSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'projectId': value['projectId'],
        'title': value['title'],
        'category': ProjectCategorySummaryToJSON(value['category']),
        'startDate': value['startDate'] == null ? undefined : ((value['startDate']).toISOString().substring(0,10)),
        'endDate': value['endDate'] == null ? undefined : ((value['endDate']).toISOString().substring(0,10)),
        'piList': value['piList'] == null ? undefined : ((value['piList'] as Array<any>).map(ExternalProfessorSummaryToJSON)),
        'practicalProfessors': value['practicalProfessors'] == null ? undefined : ((value['practicalProfessors'] as Array<any>).map(ExternalProfessorSummaryToJSON)),
        'leaders': value['leaders'] == null ? undefined : ((value['leaders'] as Array<any>).map(UserSummaryToJSON)),
        'participantCount': value['participantCount'],
        'status': value['status'],
        'isPrivate': value['isPrivate'],
        'isAccessible': value['isAccessible'],
        'isPinned': value['isPinned'],
    };
}

