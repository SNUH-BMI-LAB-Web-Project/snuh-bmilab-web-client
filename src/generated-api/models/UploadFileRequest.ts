/* tslint:disable */
/* eslint-disable */
/**
 * BMI-LAB Web API
 * BMI-LAB을 관리하기 위한 웹 서비스
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UploadFileRequest
 */
export interface UploadFileRequest {
    /**
     * UUID
     * @type {string}
     * @memberof UploadFileRequest
     */
    uuid: string;
    /**
     * 파일 이름
     * @type {string}
     * @memberof UploadFileRequest
     */
    fileName: string;
    /**
     * 파일 확장자
     * @type {string}
     * @memberof UploadFileRequest
     */
    extension: string;
    /**
     * 파일 크기 (바이트 단위)
     * @type {number}
     * @memberof UploadFileRequest
     */
    size?: number;
    /**
     * 파일 도메인 타입
     * @type {string}
     * @memberof UploadFileRequest
     */
    domainType: UploadFileRequestDomainTypeEnum;
}


/**
 * @export
 */
export const UploadFileRequestDomainTypeEnum = {
    Project: 'PROJECT',
    Timeline: 'TIMELINE',
    Report: 'REPORT',
    Board: 'BOARD'
} as const;
export type UploadFileRequestDomainTypeEnum = typeof UploadFileRequestDomainTypeEnum[keyof typeof UploadFileRequestDomainTypeEnum];


/**
 * Check if a given object implements the UploadFileRequest interface.
 */
export function instanceOfUploadFileRequest(value: object): value is UploadFileRequest {
    if (!('uuid' in value) || value['uuid'] === undefined) return false;
    if (!('fileName' in value) || value['fileName'] === undefined) return false;
    if (!('extension' in value) || value['extension'] === undefined) return false;
    if (!('domainType' in value) || value['domainType'] === undefined) return false;
    return true;
}

export function UploadFileRequestFromJSON(json: any): UploadFileRequest {
    return UploadFileRequestFromJSONTyped(json, false);
}

export function UploadFileRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UploadFileRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'uuid': json['uuid'],
        'fileName': json['fileName'],
        'extension': json['extension'],
        'size': json['size'] == null ? undefined : json['size'],
        'domainType': json['domainType'],
    };
}

export function UploadFileRequestToJSON(json: any): UploadFileRequest {
    return UploadFileRequestToJSONTyped(json, false);
}

export function UploadFileRequestToJSONTyped(value?: UploadFileRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'uuid': value['uuid'],
        'fileName': value['fileName'],
        'extension': value['extension'],
        'size': value['size'],
        'domainType': value['domainType'],
    };
}

