/* tslint:disable */
/* eslint-disable */
/**
 * BMI-LAB Web API
 * BMI-LAB을 관리하기 위한 웹 서비스
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BoardPinRequest,
} from '../models/index';
import {
    BoardPinRequestFromJSON,
    BoardPinRequestToJSON,
} from '../models/index';

export interface UpdateBoardPinStatusRequest {
    boardId: number;
    boardPinRequest: BoardPinRequest;
}

/**
 * 
 */
export class AdminBoardApi extends runtime.BaseAPI {

    /**
     * 기존 게시글 고정상태를 수정하기 위한 PATCH API
     * 게시글 고정 상태 수정
     */
    async updateBoardPinStatusRaw(requestParameters: UpdateBoardPinStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['boardId'] == null) {
            throw new runtime.RequiredError(
                'boardId',
                'Required parameter "boardId" was null or undefined when calling updateBoardPinStatus().'
            );
        }

        if (requestParameters['boardPinRequest'] == null) {
            throw new runtime.RequiredError(
                'boardPinRequest',
                'Required parameter "boardPinRequest" was null or undefined when calling updateBoardPinStatus().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("JWT", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/admin/board/{boardId}/pin`.replace(`{${"boardId"}}`, encodeURIComponent(String(requestParameters['boardId']))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: BoardPinRequestToJSON(requestParameters['boardPinRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * 기존 게시글 고정상태를 수정하기 위한 PATCH API
     * 게시글 고정 상태 수정
     */
    async updateBoardPinStatus(requestParameters: UpdateBoardPinStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.updateBoardPinStatusRaw(requestParameters, initOverrides);
    }

}
